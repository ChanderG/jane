# --------------------------------------------------
# Boolean core functions
# --------------------------------------------------

(define not
  (lambda (x)
    (if x
      false
      true)))

# TODO: we have a terrible parser. It should detect if there are undefined vars being used and warn.

(define and
  (lambda (xs)
    (if (eq xs ())
      true
      (if (not (head xs))
        false
        (and (tail xs))))))

(define or
  (lambda (xs)
    (if (eq xs ())
      false
      (if (head xs)
        true
        (or (tail xs))))))

# --------------------------------------------------
# List core functions
# --------------------------------------------------

(define len
  (lambda (xs)
    (if (eq xs ())
      0
      (+ 1 (len (tail xs))))))

(define rev
  (lambda (xs)
    (if (lte (len xs) 1)
      xs
      (ladd (rev (tail xs)) ((head xs))))))

(define last
  (lambda (xs)
    (if (eq (len xs) 0)
        ()
        (if (eq (len xs) 1)
            (head xs)
            (last (tail xs))))))

(define flatten
  (lambda (xs)
    (if (not (list? xs))
      (list xs)
      (if (eq xs ())
        ()
        (ladd (flatten (head xs)) (flatten (tail xs)))))))
